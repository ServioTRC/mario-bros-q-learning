TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 1 files
Detected 1 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: agent.py
--------------------------------------------------------------------------------
agent.py:79:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
================================================================================
Detailed log follows:

================================================================================
--------------------------------------------------------------------------------
Processing file 'agent.py'
 outputting to 'agent2.py'
--------------------------------------------------------------------------------

16:23: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
18:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
19:25: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
20:21: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
37:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
38:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
39:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
40:22: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:27: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
43:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
44:26: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
45:26: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
46:26: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
48:52: INFO: Added keywords to args of function 'tf.shape'
49:25: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
50:26: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
52:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
53:33: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
54:33: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
55:33: INFO: Renamed 'tf.layers.conv2d' to 'tf.compat.v1.layers.conv2d'
57:59: INFO: Added keywords to args of function 'tf.shape'
58:32: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
59:50: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
62:82: INFO: Added keywords to args of function 'tf.shape'
63:20: INFO: tf.losses.huber_loss requires manual check. tf.losses have been replaced with object oriented versions in TF 2.0 and after. The loss function calls have been converted to compat.v1 for backward compatibility. Please update these calls to the TF 2.0 versions.
63:20: INFO: Renamed 'tf.losses.huber_loss' to 'tf.compat.v1.losses.huber_loss'
64:21: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
66:25: INFO: tf.summary.merge requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
66:25: INFO: Renamed 'tf.summary.merge' to 'tf.compat.v1.summary.merge'
67:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
67:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
68:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
68:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
69:12: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
69:12: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
69:39: INFO: Added keywords to args of function 'tf.reduce_max'
71:22: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
71:22: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
75:26: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
75:68: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
75:102: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
79:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

